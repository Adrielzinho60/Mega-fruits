using UnityEngine;

public class PlayerController : MonoBehaviour
{
    public float moveSpeed = 5f;
    public float jumpForce = 7f;
    public float flySpeed = 7f;

    private Rigidbody rb;
    private bool isGrounded = true;
    private bool isFlying = false;

    void Start()
    {
        rb = GetComponent<Rigidbody>();
    }

    void Update()
    {
        Movement();
        Jump();
        FlyToggle();
    }

    void Movement()
    {
        float h = Input.GetAxis("Horizontal");
        float v = Input.GetAxis("Vertical");

        Vector3 move = transform.right * h + transform.forward * v;
        Vector3 newPos = rb.position + move * moveSpeed * Time.deltaTime;

        rb.MovePosition(newPos);
    }

    void Jump()
    {
        if (Input.GetButtonDown("Jump") && isGrounded && !isFlying)
        {
            rb.AddForce(Vector3.up * jumpForce, ForceMode.Impulse);
            isGrounded = false;
        }
    }

    void FlyToggle()
    {
        if (Input.GetKeyDown(KeyCode.F))
        {
            isFlying = !isFlying;
            rb.useGravity = !isFlying;
        }

        if (isFlying)
        {
            float upDown = 0f;
            if (Input.GetKey(KeyCode.E)) upDown = 1f;
            else if (Input.GetKey(KeyCode.Q)) upDown = -1f;

            Vector3 flyMove = transform.forward * flySpeed * Time.deltaTime + Vector3.up * upDown * flySpeed * Time.deltaTime;
            rb.MovePosition(rb.position + flyMove);
        }
    }

    private void OnCollisionEnter(Collision collision)
    {
        if (collision.contacts[0].normal == Vector3.up)
        {
            isGrounded = true;
        }
    }
}
